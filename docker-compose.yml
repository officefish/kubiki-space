services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8npassword
      POSTGRES_DB: n8n
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - n8n_network

  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npassword

      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=kubiki&hack

      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=https://kubiki.space/
      - VUE_APP_URL_BASE_API=https://kubiki.space/
      - N8N_EDITOR_BASE_URL=https://kubiki.space
      - N8N_SECURE_COOKIE=true
    volumes:
      - ./n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    networks:
      - n8n_network

  app:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_NAME=n8n
      - DATABASE_USER=n8n
      - DATABASE_PASS=n8npassword
      - DATABASE_URI=postgres://n8n:n8npassword@postgres:5432/n8n
    ports:
      - '4000:4000'
    depends_on:
      - postgres
    networks:
      - n8n_network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - n8n_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl  # Папка с вашими SSL-сертификатами
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    networks:
      - n8n_network

networks:
  n8n_network:
    driver: bridge